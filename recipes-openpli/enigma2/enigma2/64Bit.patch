diff -Naur e2-original/lib/gdi/gpixmap.cpp e2-64Bit/lib/gdi/gpixmap.cpp
--- e2-original/lib/gdi/gpixmap.cpp	2017-11-22 15:23:18.473839000 +0330
+++ e2-64Bit/lib/gdi/gpixmap.cpp	2017-11-22 15:52:29.930190000 +0330
@@ -631,8 +631,13 @@
 				if (flag & blitAlphaTest)
 				{
 					int width = area.width();
-					uint32_t *src = srcptr;
-					uint32_t *dst = dstptr;
+#if defined(__aarch64__)
+					unsigned int *src=(unsigned int*)srcptr;
+					unsigned int *dst=(unsigned int*)dstptr;
+#else
+					unsigned long *src=(unsigned long*)srcptr;
+					unsigned long *dst=(unsigned long*)dstptr;
+#endif
 					while (width--)
 					{
 						if (!((*src)&0xFF000000))
diff -Naur e2-original/lib/gdi/gpixmap.h e2-64Bit/lib/gdi/gpixmap.h
--- e2-original/lib/gdi/gpixmap.h	2017-11-22 15:23:18.473839000 +0330
+++ e2-64Bit/lib/gdi/gpixmap.h	2017-11-22 15:52:29.930190000 +0330
@@ -22,12 +22,20 @@
 			unsigned char a, r, g, b;
 		};
 #endif
+#if defined (__aarch64__)
 		unsigned int value;
+#else
+		unsigned long value;
+#endif
 	};
 	gRGB(int r, int g, int b, int a=0): b(b), g(g), r(r), a(a)
 	{
 	}
+#if defined (__aarch64__)
 	gRGB(unsigned int val): value(val)
+#else
+	gRGB(unsigned long val): value(val)
+#endif
 	{
 	}
 	gRGB(const gRGB& other): value(other.value)
@@ -35,7 +43,11 @@
 	}
 	gRGB(const char *colorstring)
 	{
+#if defined (__aarch64__)
 		unsigned int val = 0;
+#else
+		unsigned long val = 0;
+#endif
 		if (colorstring)
 		{
 			for (int i = 0; i < 8; i++)
@@ -51,17 +63,29 @@
 	{
 	}
 
+#if defined (__aarch64__)
 	unsigned int argb() const
+#else
+	unsigned long argb() const
+#endif
 	{
 		return value;
 	}
 
+#if defined (__aarch64__)
 	void set(unsigned int val)
+#else
+	void set(unsigned long val)
+#endif
 	{
 		value = val;
 	}
 
+#if defined (__aarch64__)
 	void operator=(unsigned int val)
+#else
+	void operator=(unsigned long val)
+#endif
 	{
 		value = val;
 	}
@@ -93,7 +117,11 @@
 	}
 	operator const std::string () const
 	{
+#if defined (__aarch64__)
 		unsigned int val = value;
+#else
+		unsigned long val = value;
+#endif
 		std::string escapecolor = "\\c";
 		escapecolor.resize(10);
 		for (int i = 9; i >= 2; i--)
@@ -132,7 +160,11 @@
 {
 	int start, colors;
 	gRGB *data;
+#if defined (__aarch64__)
+	unsigned int data_phys;
+#else
 	unsigned long data_phys;
+#endif
 	gColor findColor(const gRGB rgb) const;
 	gPalette():	start(0), colors(0), data(0), data_phys(0) {}
 };
